{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darshan\\\\OneDrive\\\\Desktop\\\\note-done-simple\\\\Frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TaskCard from \"./components/TaskCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const fetchTasks = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/tasks\");\n      const data = await res.json();\n      setTasks(data);\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const parseTimeString = timeStr => {\n    const parsed = new Date(`1970-01-01T${timeStr}`);\n    if (!isNaN(parsed.getTime())) {\n      return parsed.toTimeString().slice(0, 5); // HH:MM\n    }\n    const match = timeStr.match(/(\\d+):?(\\d{0,2})?\\s*(AM|PM)?/i);\n    if (!match) return \"\";\n    let hours = parseInt(match[1]);\n    let minutes = match[2] ? parseInt(match[2]) : 0;\n    const ampm = match[3];\n    if ((ampm === null || ampm === void 0 ? void 0 : ampm.toUpperCase()) === \"PM\" && hours < 12) hours += 12;\n    if ((ampm === null || ampm === void 0 ? void 0 : ampm.toUpperCase()) === \"AM\" && hours === 12) hours = 0;\n    if (isNaN(hours) || isNaN(minutes)) return \"\";\n    return `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(2, \"0\")}`;\n  };\n  const addTask = async e => {\n    e.preventDefault();\n    if (!title.trim()) return;\n    let dueDate = \"\";\n    if (date) {\n      const parsedTime = parseTimeString(time) || \"00:00\";\n      dueDate = `${date}T${parsedTime}`;\n    }\n    await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        dueDate\n      })\n    });\n    setTitle(\"\");\n    setDate(\"\");\n    setTime(\"\");\n    fetchTasks();\n  };\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n    fetchTasks();\n  };\n  const toggleComplete = async (id, completed) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        completed\n      })\n    });\n    fetchTasks();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-black text-white p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8\",\n      children: \"Notes & Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTask,\n      className: \"bg-white rounded p-4 max-w-xl mb-6 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Take a note...\",\n        className: \"w-full text-black text-lg mb-4 outline-none\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"text-black p-2 rounded flex-1\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"text-black p-2 rounded flex-1\",\n          placeholder: \"Time (e.g. 14:30 or 2:30 PM)\",\n          value: time,\n          onChange: e => setTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-black text-white px-6 py-2 rounded hover:bg-gray-800 text-sm font-semibold\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\",\n      children: [tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400\",\n        children: \"No tasks yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 32\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        ...task,\n        onDelete: deleteTask,\n        onToggleComplete: toggleComplete\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mKlHQwrXm3a8FYyCt5KXWIJ8OPE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TaskCard","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","title","setTitle","date","setDate","time","setTime","fetchTasks","res","fetch","data","json","err","console","error","parseTimeString","timeStr","parsed","Date","isNaN","getTime","toTimeString","slice","match","hours","parseInt","minutes","ampm","toUpperCase","String","padStart","addTask","e","preventDefault","trim","dueDate","parsedTime","method","headers","body","JSON","stringify","deleteTask","id","toggleComplete","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","length","map","task","onDelete","onToggleComplete","_c","$RefreshReg$"],"sources":["C:/Users/darshan/OneDrive/Desktop/note-done-simple/Frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TaskCard from \"./components/TaskCard\";\r\n\r\nexport default function App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/tasks\");\r\n      const data = await res.json();\r\n      setTasks(data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching tasks:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const parseTimeString = (timeStr) => {\r\n    const parsed = new Date(`1970-01-01T${timeStr}`);\r\n    if (!isNaN(parsed.getTime())) {\r\n      return parsed.toTimeString().slice(0, 5); // HH:MM\r\n    }\r\n\r\n    const match = timeStr.match(/(\\d+):?(\\d{0,2})?\\s*(AM|PM)?/i);\r\n    if (!match) return \"\";\r\n\r\n    let hours = parseInt(match[1]);\r\n    let minutes = match[2] ? parseInt(match[2]) : 0;\r\n    const ampm = match[3];\r\n\r\n    if (ampm?.toUpperCase() === \"PM\" && hours < 12) hours += 12;\r\n    if (ampm?.toUpperCase() === \"AM\" && hours === 12) hours = 0;\r\n\r\n    if (isNaN(hours) || isNaN(minutes)) return \"\";\r\n\r\n    return `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const addTask = async (e) => {\r\n    e.preventDefault();\r\n    if (!title.trim()) return;\r\n\r\n    let dueDate = \"\";\r\n    if (date) {\r\n      const parsedTime = parseTimeString(time) || \"00:00\";\r\n      dueDate = `${date}T${parsedTime}`;\r\n    }\r\n\r\n    await fetch(\"http://localhost:5000/tasks\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ title, dueDate }),\r\n    });\r\n\r\n    setTitle(\"\");\r\n    setDate(\"\");\r\n    setTime(\"\");\r\n    fetchTasks();\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    fetchTasks();\r\n  };\r\n\r\n  const toggleComplete = async (id, completed) => {\r\n    await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ completed }),\r\n    });\r\n    fetchTasks();\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black text-white p-6\">\r\n      <h1 className=\"text-4xl font-bold mb-8\">Notes & Tasks</h1>\r\n\r\n      <form\r\n        onSubmit={addTask}\r\n        className=\"bg-white rounded p-4 max-w-xl mb-6 shadow-md\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Take a note...\"\r\n          className=\"w-full text-black text-lg mb-4 outline-none\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n\r\n        <div className=\"flex gap-4 mb-4\">\r\n          <input\r\n            type=\"date\"\r\n            className=\"text-black p-2 rounded flex-1\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"text-black p-2 rounded flex-1\"\r\n            placeholder=\"Time (e.g. 14:30 or 2:30 PM)\"\r\n            value={time}\r\n            onChange={(e) => setTime(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-black text-white px-6 py-2 rounded hover:bg-gray-800 text-sm font-semibold\"\r\n        >\r\n          Add\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\r\n        {tasks.length === 0 && <p className=\"text-gray-400\">No tasks yet.</p>}\r\n        {tasks.map((task) => (\r\n          <TaskCard\r\n            key={task.id}\r\n            {...task}\r\n            onDelete={deleteTask}\r\n            onToggleComplete={toggleComplete}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}